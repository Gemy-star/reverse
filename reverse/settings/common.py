"""
Django settings for reverse project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from django.utils.translation import gettext_lazy as _
from django.urls import reverse_lazy
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i#13ip5hxcad)*u(0c*7mk38cn-#pubj#cz$36^rn*8cvp*nb8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shop.apps.ShopConfig',
    'crispy_forms',
    'crispy_bootstrap5',
    'constance',
    'constance.backends.database',
    'imagekit',
    'colorfield',
    'mathfilters',
    'ckeditor',
    'django_countries',
    'widget_tweaks',
]
CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.locale.LocaleMiddleware', 
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'shop.middleware.ForceArabicDefaultMiddleware',
]

ROOT_URLCONF = 'reverse.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Look for templates in the 'templates' directory at project root
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'shop.context_processors.categories_processor',
                'constance.context_processors.config',
            ],
        },
    },
]
WSGI_APPLICATION = 'reverse.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_USER_MODEL = 'shop.ReverseUser'

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ar'
TIME_ZONE = 'Africa/Cairo'
USE_I18N = True
USE_L10N = True
USE_TZ = True

LOCALE_PATHS = [BASE_DIR / 'locale']

LANGUAGES = [
    ('en', _('English')),
    ('ar', _('Arabic')),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static', # Look for static files in the 'static' directory at project root
]

# Media files (User-uploaded content, like product images)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR , "media") # Store uploaded media files in the 'media' directory at project root

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CONSTANCE_CONFIG = {
    # Company Info
    'COMPANY_NAME': (
        'Reverse',
        'Company name'
    ),
    'COMPANY_DESCRIPTION': (
        'Reverse is a modern e-commerce platform offering premium products and a seamless shopping experience.',
        'Company description'
    ),
    'EMAIL_ADDRESS': (
        'support@example.com',
        'Contact email address'
    ),
    'WHATSAPP_NUMBER': (
        '+201234567890',
        'WhatsApp number with country code'
    ),

    # Social Media Links
    'FACEBOOK_URL': (
        'https://facebook.com/yourpage',
        'Facebook URL'
    ),
    'INSTAGRAM_URL': (
        'https://instagram.com/yourprofile',
        'Instagram URL'
    ),
    'TIKTOK_URL': (
        'https://linkedin.com/company/yourcompany',
        'TIKTOk URL'
    ),
    'ENABLE_BEST_SELLER_FLAG': (True, 'Enable "Best Seller" flag display for products'),
    'ENABLE_NEW_ARRIVAL_FLAG': (True, 'Enable "New Arrival" flag display for products'),
    'ENABLE_FEATURED_FLAG': (True, 'Enable "Featured" flag display for products'),
    'ENABLE_SALE_FLAG': (True, 'Enable "On Sale" flag display for products'),
    'ENABLE_ALL_FLAG': (True, 'Enable "All" flag display for products'),
     'ENABLE_USER_LOG': (False, 'Enable User System -- not completed yet --'),
    'SHIPPING_RATE_CAIRO': (60.00, 'Flat shipping rate for orders inside Cairo.', float),
    'SHIPPING_RATE_OUTSIDE_CAIRO': (100.00, 'Flat shipping rate for orders outside Cairo.', float),
    'SITE_NAME': (None, 'Site name (managed by django.contrib.sites)', str),
    'SITE_URL': (None, 'Site URL (managed by django.contrib.sites)', str),
    'ADMIN_EMAIL': (os.getenv('ADMIN_EMAIL', 'support@mnory.com'), 'Admin Email used to receive emails', str),
    'SENDGRID_API_KEY': (os.getenv('SENDGRID_API_KEY'), 'SendGrid API Key', str),
}


CONSTANCE_CONFIG_FIELDSETS = {
    'Company Information': (
        'COMPANY_NAME',
        'COMPANY_DESCRIPTION',
        'EMAIL_ADDRESS',
        'WHATSAPP_NUMBER',
        'SITE_NAME',
        'SITE_URL'
    ),
    'Social Media Links': (
        'FACEBOOK_URL',
        'INSTAGRAM_URL',
        'TIKTOK_URL'
    ),
    'Shipping': (
        'SHIPPING_RATE_CAIRO',
        'SHIPPING_RATE_OUTSIDE_CAIRO',
    ),
    'Product Flag Toggles': (
        'ENABLE_BEST_SELLER_FLAG',
        'ENABLE_NEW_ARRIVAL_FLAG',
        'ENABLE_FEATURED_FLAG',
        'ENABLE_SALE_FLAG',
        'ENABLE_ALL_FLAG',
        'ENABLE_USER_LOG',
    ),
    'Email & API': (
        'ADMIN_EMAIL',
        'SENDGRID_API_KEY',
    ),
}



# Where to redirect users who are not logged in
LOGIN_URL = reverse_lazy('shop:account')  
# Where to redirect users after successful login
LOGIN_REDIRECT_URL = reverse_lazy('shop:home')
# 100 MB = 100 * 1024 * 1024 bytes
DATA_UPLOAD_MAX_MEMORY_SIZE = 200 * 1024 * 1024  # 200 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 200 * 1024 * 1024  # 200 MB
# Session Configuration
SESSION_COOKIE_AGE = 3600 * 8  # 8 hours
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

ADMIN_USER_TYPES = ['admin']
VENDOR_USER_TYPES = ['vendor']
CUSTOMER_USER_TYPES = ['customer', 'client']
# Admin Configuration
ADMIN_SITE_HEADER = "Reverse Shop Administration"
ADMIN_SITE_TITLE = "Reverse Admin"
ADMIN_INDEX_TITLE = "Welcome to Reverse-Eg Administration"
SENDGRID_API_KEY = os.getenv("SENDGRID_API_KEY")
DEFAULT_FROM_EMAIL = "support@reverse-eg.com"
ADMIN_EMAIL = "support@reverse-eg.com"
SENDGRID_SANDBOX_MODE_IN_DEBUG = False
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.sendgrid.net"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "apikey"
EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
